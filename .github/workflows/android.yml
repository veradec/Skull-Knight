name: Android CI (Unsigned Release)

on:
  push:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Needed for tag history

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Make gradlew executable
      run: chmod +x gradlew
      
    - name: Build Unsigned Release APK
      run: ./gradlew assembleRelease

    - name: Get next version number
      id: version
      run: |
        # Get latest tag (e.g., v1.0.0)
        LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
        echo "Latest tag: $LATEST_TAG"
        
        # Extract version numbers
        VERSION=${LATEST_TAG#v}
        IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"
        
        # Increment PATCH version
        NEW_PATCH=$((PATCH + 1))
        NEW_VERSION="v$MAJOR.$MINOR.$NEW_PATCH"
        
        echo "Next version: $NEW_VERSION"
        echo "RELEASE_TITLE=Release Version ($MAJOR.$MINOR.$NEW_PATCH)" >> $GITHUB_ENV
        echo "NEW_TAG=$NEW_VERSION" >> $GITHUB_ENV
        echo "APK_NAME=skullknight-release-unsigned-$NEW_VERSION.apk" >> $GITHUB_ENV

    - name: Verify APK exists
      run: |
        if [ ! -f "app/build/outputs/apk/release/app-release-unsigned.apk" ]; then
          echo "APK not found!"
          ls -R app/build/outputs/apk/
          exit 1
        else
          # Rename APK to your custom format
          mv app/build/outputs/apk/release/app-release-unsigned.apk app/build/outputs/apk/release/${{ env.APK_NAME }}
        fi

    - name: Upload APK as artifact
      uses: actions/upload-artifact@v4
      with:
        name: skullknight-release-unsigned
        path: app/build/outputs/apk/release/${{ env.APK_NAME }}
        
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.NEW_TAG }}
        release_name: ${{ env.RELEASE_TITLE }}
        draft: false
        prerelease: false
        
    - name: Upload APK to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: app/build/outputs/apk/release/${{ env.APK_NAME }}
        asset_name: ${{ env.APK_NAME }}
        asset_content_type: application/vnd.android.package-archive
